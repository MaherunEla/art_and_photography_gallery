"use client";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "@/app/styles/globals.css";
import Sidebarpage from "./components/layout/sidebar/page";
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
import { Toaster } from "@/components/ui/toaster";
import Navbar from "./components/navbar";

const inter = Inter({ subsets: ["latin"] });

const queryClient = new QueryClient();

// // export const metadata: Metadata = {
// //   title: "Create Next App",
// //   description: "Generated by create next app",
// // };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   const { data: session, status } = useSession();

//   if (status === "loading") {
//     // Show loading indicator if session status is still loading
//     return <div>Loading...</div>;
//   }

//   // Check if the user is authenticated and has the "Admin" role
//   const isAdmin = session?.user?.role === "Admin";

//   if (!isAdmin) {
//     // If user is not authenticated or does not have the "Admin" role, redirect to login page
//     // You can replace "/login" with your actual login page URL
//     window.location.href = "/login";
//     return null; // Ensure nothing else is rendered if redirecting
//   }
//   return (
//     <html lang="en">
//       <body className={inter.className}>
//         <QueryClientProvider client={queryClient}>
//           <SessionProvider>
//             <div className="flex ">
//               <div className="flex-1 p-5 min-h-screen bg-[#151c2c]">
//                 <Sidebarpage />
//               </div>
//               <div className="grow md-grow-0 p-5 bg-[#151c2c] ">
//                 <Navbar />
//                 {children}
//               </div>
//               <Toaster />
//             </div>
//           </SessionProvider>
//         </QueryClientProvider>
//         {/* <div className="flex">
//           <div className="hidden lg:flex flex-col ">
//             <Sidebarpage />
//           </div>

//           <div className="flex-1 bg-slate-600 border border-red-950">
//             {children}
//           </div>
//         </div> */}
//       </body>
//     </html>
//   );
// }
import { useSession } from "next-auth/react";
import { SessionProvider } from "next-auth/react";
import LogoutOnClose from "@/app/(website)/components/shared/Logoutclose";

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={inter.className}>
        <QueryClientProvider client={queryClient}>
          <SessionProvider>
            <RootLayoutContent>{children}</RootLayoutContent>
          </SessionProvider>
        </QueryClientProvider>
      </body>
    </html>
  );
}

function RootLayoutContent({ children }: { children: React.ReactNode }) {
  const { data: session, status } = useSession();

  if (status === "loading") {
    // Show loading indicator if session status is still loading
    return <div>Loading...</div>;
  }

  // Check if the user is authenticated and has the "Admin" role
  const isAdmin = session?.user?.role === "Admin";

  if (!isAdmin) {
    // If user is not authenticated or does not have the "Admin" role, redirect to login page
    // You can replace "/login" with your actual login page URL
    window.location.href = "/Adminlogin";
    return null; // Ensure nothing else is rendered if redirecting
  }

  return (
    <div className="flex ">
      <div className="flex-1 p-5 min-h-screen bg-[#151c2c]">
        <Sidebarpage />
      </div>
      <div className="grow md-grow-0 p-5 bg-[#151c2c] ">
        <Navbar />
        {children}
      </div>
      <Toaster />
      <LogoutOnClose />
    </div>
  );
}
